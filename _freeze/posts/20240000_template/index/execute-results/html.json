{
  "hash": "a3add4058061b2e6d32403b237485a63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Template\"\nsubtitle: \"This is a template for a post\"\ndescription: \"The description appears here\"\nauthor: \"Guido Huyberechts\"\ndate: \"2024-08-15\"\ndate-modified: last-modified\nreading-time: true\nfile-modified: true\nimage: \"img/laptop.jpg\"\ncategories: [news, EN]\nengine: knitr\ndraft: false\n---\n\n::: {.cell}\n<style type=\"text/css\">\np {\ntext-align: justify\n}\nfigcaption {\n  margin: auto;\n  text-align: center;\n}\n</style>\n:::\n\n\n## Template\n\nThis is a template for a post.\nNote that draft is set to true. if you do not want to show it.\n\nThe css chunck arranges that the paragraphs (p) are justified and the figure captions (figcaption) are centered. Be sure to have engine: knitr in the YAML section.\nSince Here the very first thing was used a css code, Quarto will try to render this file using jupyter engine. So I have specified engine: knitr just to be in a safe side. But seems to be necessary indeed. Beware!\n\n\nFor the time being in each qmd, maybe one day set globally?\n\nIn the post:\n- the title appears on top.\n- the subtitle just below.\n- then the categories and then \n- the description\n\nBelow there is the author and the published date,\nNext modified date and then follows the text in the body.\n\nOn the \"home\" one finds the image then the title.\nNext line is the calculated reading time,\nfollowed by the categories\nthe description and finally \nauthor name and publication date.\n\nThis template is used by simply making a copy of the containing folder and editing the index file.\n\nFollows the description\n\nIf a pdf needs to be generated, include the following in the YAML section (or something alike)\n\n<!-- \nformat:\n  pdf:\n    toc: false\n    toc-depth: 2\n    number-sections: false\n    number-depth: 2\n    output-file: \"post20240823\"\n    output-ext:  \"pdf\"\n-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}